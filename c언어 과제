#include <stdio.h>

union Data {
    int i;
    float f;
    char str[20];
};

int main() {
    union Data data;

    data.i = 10;
    printf("정수 값: %d\n", data.i);

    data.f = 3.14;
    printf("부동소수점 값: %f\n", data.f);

    strcpy(data.str, "Hello, World!");
    printf("문자열 값: %s\n", data.str);

    return 0;
}

union에 struct와 유사하게 데이터를 저장하는 구조이지만 struct와 달리 멤버들이 메모리를 공유하기 때문에 모든 멤버 중에서 메모리 크기가 가장 큰 멤버의 크기만큼 메모리를 할당합니다.
이 코드에서는 union Data를 정의하고, 이 union에는 정수, 부동 소수점 및 문자열 값을 저장하는 세 가지 멤버가 있습니다. main 함수에서는 이 union을 사용하여 각 멤버에 값을 할당하고 출력합니다.

###########################################################################################################################################

#include <stdio.h>

enum Weekday {
    SUNDAY,
    MONDAY,
    TUESDAY,
    WEDNESDAY,
    THURSDAY,
    FRIDAY,
    SATURDAY
};

int main() {
    enum Weekday today = WEDNESDAY;

    switch (today) {
        case SUNDAY:
            printf("오늘은 일요일입니다.\n");
            break;
        case MONDAY:
            printf("오늘은 월요일입니다.\n");
            break;
        case TUESDAY:
            printf("오늘은 화요일입니다.\n");
            break;
        case WEDNESDAY:
            printf("오늘은 수요일입니다.\n");
            break;
        case THURSDAY:
            printf("오늘은 목요일입니다.\n");
            break;
        case FRIDAY:
            printf("오늘은 금요일입니다.\n");
            break;
        case SATURDAY:
            printf("오늘은 토요일입니다.\n");
            break;
        default:
            printf("요일을 알 수 없습니다.\n");
            break;
    }

    return 0;
}

enum은 정수형 상수에 이름을 붙여서 알아보기 쉽게하는 해주는것으로 enum에 요일별로 저장해두는것으로 switch문에 숫자가 아닌 문자를 써도 실행되게 만들어졌습니다

##############################################################################################################################################################

이번 실습을 통해 c언어 실력이 한층 상승한것을 느꼈고 더욱 자신감을 얻은것 같습니다
